// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  name       String
  bio        String?  @db.Text
  email      String?  @unique
  avatar_url String?
  created_at DateTime @default(now())

  accounts Account[]
  sessions Session[]
  notes    Notes[]

  @@map("users")
}

model Account {
  id                  String  @id @default(cuid())
  user_id             String
  type                String
  provider            String
  provider_account_id String
  refresh_token       String? @db.Text
  access_token        String? @db.Text
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String? @db.Text
  session_state       String?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
  @@index([user_id])
  @@map("accounts")
}

model Session {
  id            String   @id @default(cuid())
  session_token String   @unique
  user_id       String
  expires       DateTime

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
  @@map("sessions")
}

model Entries {
  id         String   @id @default(uuid())
  title      String
  value      Float
  type       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  notes_id   String?

  Notes Notes? @relation(fields: [notes_id], references: [id])

  @@map("entries")
}

model Notes {
  id          String   @id @default(uuid())
  title       String
  description String?  @db.Text
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  user_id     String?

  entries Entries[]

  User User? @relation(fields: [user_id], references: [id])

  @@map("notes")
}
